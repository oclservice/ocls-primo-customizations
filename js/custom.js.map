{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@xmldom/xmldom/lib/conventions.js","node_modules/@xmldom/xmldom/lib/dom-parser.js","node_modules/@xmldom/xmldom/lib/dom.js","node_modules/@xmldom/xmldom/lib/entities.js","node_modules/@xmldom/xmldom/lib/index.js","node_modules/@xmldom/xmldom/lib/sax.js","node_modules/x2js/x2js.js","primo-explore/custom/01OCLS_ALGON-ALGON/js/main.js","primo-explore/custom/01OCLS_ALGON-ALGON/js/ocls-clear-display/index.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","freeze","object","oc","undefined","Object","MIME_TYPE","HTML","isHTML","value","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","uri","SVG","XML","XMLNS","assign","target","source","TypeError","key","prototype","hasOwnProperty","find","list","predicate","ac","Array","item","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","replace","DOMParser","options","this","locator","DOMHandler","cdata","position","node","lineNumber","columnNumber","_locator","l","systemId","_toString","chars","start","substr","java","lang","String","appendElement","hander","currentElement","doc","appendChild","parseFromString","mimeType","domBuilder","errorHandler","defaultNSMap","xmlns","test","entityMap","HTML_ENTITIES","XML_ENTITIES","normalize","setDocumentLocator","errorImpl","isCallback","Function","build","fn","msg","xml","parse","error","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","len","getURI","getValue","getQName","attr","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","data","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","apply","arguments","createCDATASection","createTextNode","skippedEntity","name","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","__DOMHandler","notEmptyString","orderedSetReducer","element","toOrderedSet","split","filter","keys","reduce","copy","src","dest","_extends","Class","Super","pt","constructor","NodeType","ExceptionCode","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","ls","inc","_inc","ownerDocument","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_removeNamedNode","lastIndex","Node","_xmlEncoder","charCodeAt","_visitNode","callback","firstChild","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","next","lastChild","isDocTypeNode","nodeType","isElementNode","isTextNode","isElementInsertionPossible","docTypeNode","parentChildNodes","indexOf","isElementReplacementPossible","assertPreInsertionValidity1to5","parent","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","_insertBefore","_inDocumentAssertion","cp","removeChild","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","visibleNamespaces","buf","refNode","documentElement","serializeToString","lookupPrefix","namespace","join","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","push","attributes","nodeName","prefixedNodeName","defaultNS","ai","nsi","slice","pubid","sysid","sub","internalSubset","index","toString","getNamedItem","setNamedItem","_ownerElement","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","cloneNode","deep","node2","v","attrs2","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importNode","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNamesSet","matches","nodeClassNames","every","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","getElementsByTagName","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","end","splitText","newText","newNode","defineProperty","get","$$length","getTextContent","set","amp","apos","gt","lt","quot","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","nameStartChar","nameChar","RegExp","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","copyLocator","currentNSMap","localNSMap","nsPrefix","nsp","_copy","closed","ElementAttributes","attributeNames","defaultNSMapCopy","entityReplacer","k","charAt","parseInt","fromCharCode","appendText","xt","m","lineEnd","linePattern","exec","lineStart","parseStack","closeMap","tagStart","match","config","pop","endMatch","toLowerCase","matchs","lastMatch","endDTD","addAttribute","qname","startIndex","addValue","attrName","s","setTagName","elStartEnd","pos","lastIndexOf","locator2","elEndStart","Math","max","getLocalName","factory","define","amd","X2JS","CustomDOMParser","pad","number","arrayAccessForm","emptyNodeForm","jsAttributeFilter","jsAttributeConverter","attributeConverters","datetimeAccessFormPaths","arrayAccessFormPaths","xmldomOptions","enableToStringFunc","skipEmptyTextNodesForObj","stripWhitespaces","useDoubleQuotes","ignoreRoot","escapeMode","attributePrefix","selfClosingElements","keepCData","keepText","jsDateUTC","trim","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","DOMNodeTypes","getDomNodeLocalName","domNode","baseName","escapeXmlChars","str","ensureProperArrayAccessForm","childName","elementPath","arrayPath","xmlDateTimeToDate","bits","d","secondBits","setHours","setMilliseconds","offsetMinutes","Number","setMinutes","getMinutes","getTimezoneOffset","UTC","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","deserializeElementChildren","result","__cnt","nodeChildren","iChild","deserializeDomChildren","iAttribute","attribute","adjustedValue","iConverter","converter","convert","namespacePrefix","__prefix","__text","fullPath","pathWithoutTextNode","candidatePath","__cdata","parentPath","deserializeRootElementChildren","children","serializeStartTag","jsObject","elementName","selfClosing","resultStr","attributeName","attributeValue","serializeEndTag","isSpecialProperty","jsonObj","propertyName","suffix","getDataElementCount","getDataAttributeNames","names","serializeTextNodeContents","textNode","serializeJavaScriptObject","elementArray","toUTCString","serializeJavaScriptObjectChildren","parseXml","parser","window","parsererrorNS","ActiveXObject","document","all","addEventListener","err","async","loadXML","asArray","toXmlDateTime","asDateTime","xml2dom","dom2js","js2dom","js2xml","xml2js","getVersion","angular","_x2js","$http","$sce","fetchOurData","baseUrl","resourceName","url","x2js","_x2js2","default","trustAsResourceUrl","then","response","httpError","status","errorMessage","controller","$scope","oclsClearService","vm","$onInit","$watch","isDefined","parentCtrl","services","log","clearBaseUrl","clearLink","publicNote","clearResourceName","component","bindings"],"mappings":"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C,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,IAAA,IACA1S,KAAA,IACA2S,KAAA,IACAC,MAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,GAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,IAAA,IACAC,IAAA,IAC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","file":"custom.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","var freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({amp:'&', apos:\"'\", gt:'>', lt:'<', quot:'\"'})\n\n/**\n * A map of currently 241 entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n       lt: '<',\n       gt: '>',\n       amp: '&',\n       quot: '\"',\n       apos: \"'\",\n       Agrave: \"À\",\n       Aacute: \"Á\",\n       Acirc: \"Â\",\n       Atilde: \"Ã\",\n       Auml: \"Ä\",\n       Aring: \"Å\",\n       AElig: \"Æ\",\n       Ccedil: \"Ç\",\n       Egrave: \"È\",\n       Eacute: \"É\",\n       Ecirc: \"Ê\",\n       Euml: \"Ë\",\n       Igrave: \"Ì\",\n       Iacute: \"Í\",\n       Icirc: \"Î\",\n       Iuml: \"Ï\",\n       ETH: \"Ð\",\n       Ntilde: \"Ñ\",\n       Ograve: \"Ò\",\n       Oacute: \"Ó\",\n       Ocirc: \"Ô\",\n       Otilde: \"Õ\",\n       Ouml: \"Ö\",\n       Oslash: \"Ø\",\n       Ugrave: \"Ù\",\n       Uacute: \"Ú\",\n       Ucirc: \"Û\",\n       Uuml: \"Ü\",\n       Yacute: \"Ý\",\n       THORN: \"Þ\",\n       szlig: \"ß\",\n       agrave: \"à\",\n       aacute: \"á\",\n       acirc: \"â\",\n       atilde: \"ã\",\n       auml: \"ä\",\n       aring: \"å\",\n       aelig: \"æ\",\n       ccedil: \"ç\",\n       egrave: \"è\",\n       eacute: \"é\",\n       ecirc: \"ê\",\n       euml: \"ë\",\n       igrave: \"ì\",\n       iacute: \"í\",\n       icirc: \"î\",\n       iuml: \"ï\",\n       eth: \"ð\",\n       ntilde: \"ñ\",\n       ograve: \"ò\",\n       oacute: \"ó\",\n       ocirc: \"ô\",\n       otilde: \"õ\",\n       ouml: \"ö\",\n       oslash: \"ø\",\n       ugrave: \"ù\",\n       uacute: \"ú\",\n       ucirc: \"û\",\n       uuml: \"ü\",\n       yacute: \"ý\",\n       thorn: \"þ\",\n       yuml: \"ÿ\",\n       nbsp: \"\\u00a0\",\n       iexcl: \"¡\",\n       cent: \"¢\",\n       pound: \"£\",\n       curren: \"¤\",\n       yen: \"¥\",\n       brvbar: \"¦\",\n       sect: \"§\",\n       uml: \"¨\",\n       copy: \"©\",\n       ordf: \"ª\",\n       laquo: \"«\",\n       not: \"¬\",\n       shy: \"­­\",\n       reg: \"®\",\n       macr: \"¯\",\n       deg: \"°\",\n       plusmn: \"±\",\n       sup2: \"²\",\n       sup3: \"³\",\n       acute: \"´\",\n       micro: \"µ\",\n       para: \"¶\",\n       middot: \"·\",\n       cedil: \"¸\",\n       sup1: \"¹\",\n       ordm: \"º\",\n       raquo: \"»\",\n       frac14: \"¼\",\n       frac12: \"½\",\n       frac34: \"¾\",\n       iquest: \"¿\",\n       times: \"×\",\n       divide: \"÷\",\n       forall: \"∀\",\n       part: \"∂\",\n       exist: \"∃\",\n       empty: \"∅\",\n       nabla: \"∇\",\n       isin: \"∈\",\n       notin: \"∉\",\n       ni: \"∋\",\n       prod: \"∏\",\n       sum: \"∑\",\n       minus: \"−\",\n       lowast: \"∗\",\n       radic: \"√\",\n       prop: \"∝\",\n       infin: \"∞\",\n       ang: \"∠\",\n       and: \"∧\",\n       or: \"∨\",\n       cap: \"∩\",\n       cup: \"∪\",\n       'int': \"∫\",\n       there4: \"∴\",\n       sim: \"∼\",\n       cong: \"≅\",\n       asymp: \"≈\",\n       ne: \"≠\",\n       equiv: \"≡\",\n       le: \"≤\",\n       ge: \"≥\",\n       sub: \"⊂\",\n       sup: \"⊃\",\n       nsub: \"⊄\",\n       sube: \"⊆\",\n       supe: \"⊇\",\n       oplus: \"⊕\",\n       otimes: \"⊗\",\n       perp: \"⊥\",\n       sdot: \"⋅\",\n       Alpha: \"Α\",\n       Beta: \"Β\",\n       Gamma: \"Γ\",\n       Delta: \"Δ\",\n       Epsilon: \"Ε\",\n       Zeta: \"Ζ\",\n       Eta: \"Η\",\n       Theta: \"Θ\",\n       Iota: \"Ι\",\n       Kappa: \"Κ\",\n       Lambda: \"Λ\",\n       Mu: \"Μ\",\n       Nu: \"Ν\",\n       Xi: \"Ξ\",\n       Omicron: \"Ο\",\n       Pi: \"Π\",\n       Rho: \"Ρ\",\n       Sigma: \"Σ\",\n       Tau: \"Τ\",\n       Upsilon: \"Υ\",\n       Phi: \"Φ\",\n       Chi: \"Χ\",\n       Psi: \"Ψ\",\n       Omega: \"Ω\",\n       alpha: \"α\",\n       beta: \"β\",\n       gamma: \"γ\",\n       delta: \"δ\",\n       epsilon: \"ε\",\n       zeta: \"ζ\",\n       eta: \"η\",\n       theta: \"θ\",\n       iota: \"ι\",\n       kappa: \"κ\",\n       lambda: \"λ\",\n       mu: \"μ\",\n       nu: \"ν\",\n       xi: \"ξ\",\n       omicron: \"ο\",\n       pi: \"π\",\n       rho: \"ρ\",\n       sigmaf: \"ς\",\n       sigma: \"σ\",\n       tau: \"τ\",\n       upsilon: \"υ\",\n       phi: \"φ\",\n       chi: \"χ\",\n       psi: \"ψ\",\n       omega: \"ω\",\n       thetasym: \"ϑ\",\n       upsih: \"ϒ\",\n       piv: \"ϖ\",\n       OElig: \"Œ\",\n       oelig: \"œ\",\n       Scaron: \"Š\",\n       scaron: \"š\",\n       Yuml: \"Ÿ\",\n       fnof: \"ƒ\",\n       circ: \"ˆ\",\n       tilde: \"˜\",\n       ensp: \" \",\n       emsp: \" \",\n       thinsp: \" \",\n       zwnj: \"‌\",\n       zwj: \"‍\",\n       lrm: \"‎\",\n       rlm: \"‏\",\n       ndash: \"–\",\n       mdash: \"—\",\n       lsquo: \"‘\",\n       rsquo: \"’\",\n       sbquo: \"‚\",\n       ldquo: \"“\",\n       rdquo: \"”\",\n       bdquo: \"„\",\n       dagger: \"†\",\n       Dagger: \"‡\",\n       bull: \"•\",\n       hellip: \"…\",\n       permil: \"‰\",\n       prime: \"′\",\n       Prime: \"″\",\n       lsaquo: \"‹\",\n       rsaquo: \"›\",\n       oline: \"‾\",\n       euro: \"€\",\n       trade: \"™\",\n       larr: \"←\",\n       uarr: \"↑\",\n       rarr: \"→\",\n       darr: \"↓\",\n       harr: \"↔\",\n       crarr: \"↵\",\n       lceil: \"⌈\",\n       rceil: \"⌉\",\n       lfloor: \"⌊\",\n       rfloor: \"⌋\",\n       loz: \"◊\",\n       spades: \"♠\",\n       clubs: \"♣\",\n       hearts: \"♥\",\n       diams: \"♦\"\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","/*\r\n\tCopyright 2015 Axinom\r\n\tCopyright 2011-2013 Abdulla Abdurakhmanov\r\n\tOriginal sources are available at https://code.google.com/p/x2js/\r\n\r\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\r\n\tyou may not use this file except in compliance with the License.\r\n\tYou may obtain a copy of the License at\r\n\r\n\thttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\n\tUnless required by applicable law or agreed to in writing, software\r\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\r\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\tSee the License for the specific language governing permissions and\r\n\tlimitations under the License.\r\n*/\r\n\r\n/*\r\n\tSupported export methods:\r\n\t* AMD\r\n\t* <script> (window.X2JS)\r\n\t* Node.js\r\n\r\n\tLimitations:\r\n\t* Attribute namespace prefixes are not parsed as such.\r\n\t* Overall the serialization/deserializaton code is \"best effort\" and not foolproof.\r\n*/\r\n\r\n// Module definition pattern used is returnExports from https://github.com/umdjs/umd\r\n(function (root, factory) {\r\n\t\"use strict\";\r\n\r\n\t/* global define */\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine([], factory);\r\n\t} else if (typeof module === 'object' && module.exports) {\r\n\t\t// Node. Does not work with strict CommonJS, but only CommonJS-like\r\n\t\t// environments that support module.exports, like Node.\r\n\t\tmodule.exports = factory(require(\"@xmldom/xmldom\").DOMParser);\r\n\t} else {\r\n\t\t// Browser globals (root is window)\r\n\t\troot.X2JS = factory();\r\n\t}\r\n})(this, function (CustomDOMParser) {\r\n\t\"use strict\";\r\n\r\n\t// We return a constructor that can be used to make X2JS instances.\r\n\treturn function X2JS(config) {\r\n\t\tvar VERSION = \"3.4.4\";\r\n\r\n\t\tconfig = config || {};\r\n\r\n\t\tfunction initConfigDefaults() {\r\n\t\t\t// If set to \"property\" then <element>_asArray will be created\r\n\t\t\t// to allow you to access any element as an array (even if there is only one of it).\r\n\t\t\tconfig.arrayAccessForm = config.arrayAccessForm || \"none\";\r\n\r\n\t\t\t// If \"text\" then <empty></empty> will be transformed to \"\".\r\n\t\t\t// If \"object\" then <empty></empty> will be transformed to {}.\r\n\t\t\tconfig.emptyNodeForm = config.emptyNodeForm || \"text\";\r\n\r\n\t\t\t// Function that will be called for each elements, if the function returns true, the element will be skipped\r\n\t\t\t// function(name, value) { return true; };\r\n\t\t\tconfig.jsAttributeFilter = config.jsAttributeFilter;\r\n\r\n\t\t\t// Function that will be called for each elements, the element value will be replaced by the returned value\r\n\t\t\t// function(name, value) { return parseFloat(value); };\r\n\t\t\tconfig.jsAttributeConverter = config.jsAttributeConverter;\r\n\r\n\t\t\t// Allows attribute values to be converted on the fly during parsing to objects.\r\n\t\t\t// \t\"test\": function(name, value) { return true; }\r\n\t\t\t//\t\"convert\": function(name, value) { return parseFloat(value); };\r\n\t\t\t// convert() will be called for every attribute where test() returns true\r\n\t\t\t// and the return value from convert() will replace the original value of the attribute.\r\n\t\t\tconfig.attributeConverters = config.attributeConverters || [];\r\n\r\n\t\t\t// Any elements that match the paths here will have their text parsed\r\n\t\t\t// as an XML datetime value (2011-11-12T13:00:00-07:00 style).\r\n\t\t\t// The path can be a plain string (parent.child1.child2),\r\n\t\t\t// a regex (/.*\\.child2/) or function(elementPath).\r\n\t\t\tconfig.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\r\n\r\n\t\t\t// Any elements that match the paths listed here will be stored in JavaScript objects\r\n\t\t\t// as arrays even if there is only one of them. The path can be a plain string\r\n\t\t\t// (parent.child1.child2), a regex (/.*\\.child2/) or function(elementName, elementPath).\r\n\t\t\tconfig.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\r\n\r\n            // xmldom constructor arguments\r\n            // @see https://github.com/jindw/xmldom#api-reference\r\n\t\t\tconfig.xmldomOptions = config.xmldomOptions || {};\r\n\r\n\t\t\t// If true, a toString function is generated to print nodes containing text or cdata.\r\n\t\t\t// Useful if you want to accept both plain text and CData as equivalent inputs.\r\n\t\t\tif (config.enableToStringFunc === undefined) {\r\n\t\t\t\tconfig.enableToStringFunc = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, empty text tags are ignored for elements with child nodes.\r\n\t\t\tif (config.skipEmptyTextNodesForObj === undefined) {\r\n\t\t\t\tconfig.skipEmptyTextNodesForObj = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, whitespace is trimmed from text nodes.\r\n\t\t\tif (config.stripWhitespaces === undefined) {\r\n\t\t\t\tconfig.stripWhitespaces = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, double quotes are used in generated XML.\r\n\t\t\tif (config.useDoubleQuotes === undefined) {\r\n\t\t\t\tconfig.useDoubleQuotes = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, the root element of the XML document is ignored when converting to objects.\r\n\t\t\t// The result will directly have the root element's children as its own properties.\r\n\t\t\tif (config.ignoreRoot === undefined) {\r\n\t\t\t\tconfig.ignoreRoot = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Whether XML characters in text are escaped when reading/writing XML.\r\n\t\t\tif (config.escapeMode === undefined) {\r\n\t\t\t\tconfig.escapeMode = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Prefix to use for properties that are created to represent XML attributes.\r\n\t\t\tif (config.attributePrefix === undefined) {\r\n\t\t\t\tconfig.attributePrefix = \"_\";\r\n\t\t\t}\r\n\r\n\t\t\t// If true, empty elements will created as self closing elements (<element />)\r\n\t\t\t// If false, empty elements will be created with start and end tags (<element></element>)\r\n\t\t\tif (config.selfClosingElements === undefined) {\r\n\t\t\t\tconfig.selfClosingElements = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If this property defined as false and an XML element has CData node ONLY, it will be converted to text without additional property \"__cdata\"\r\n\t\t\tif (config.keepCData === undefined) {\r\n\t\t\t\tconfig.keepCData = false;\r\n\t\t\t}\r\n\r\n\t\t\t// If this property defined as true, use { __text: 'abc' } over 'abc'\r\n\t\t\tif (config.keepText === undefined) {\r\n\t\t\t\tconfig.keepText = false;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, will output dates in UTC\r\n\t\t\tif (config.jsDateUTC === undefined) {\r\n\t\t\t\tconfig.jsDateUTC = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction initRequiredPolyfills() {\r\n\t\t\tfunction pad(number) {\r\n\t\t\t\tvar r = String(number);\r\n\t\t\t\tif (r.length === 1) {\r\n\t\t\t\t\tr = '0' + r;\r\n\t\t\t\t}\r\n\t\t\t\treturn r;\r\n\t\t\t}\r\n\t\t\t// Hello IE8-\r\n\t\t\tif (typeof String.prototype.trim !== 'function') {\r\n\t\t\t\tString.prototype.trim = function trim() {\r\n\t\t\t\t\treturn this.replace(/^\\s+|^\\n+|(\\s|\\n)+$/g, '');\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (typeof Date.prototype.toISOString !== 'function') {\r\n\t\t\t\t// Implementation from http://stackoverflow.com/questions/2573521/how-do-i-output-an-iso-8601-formatted-string-in-javascript\r\n\t\t\t\tDate.prototype.toISOString = function toISOString() {\r\n\t\t\t\t\tvar MS_IN_S = 1000;\r\n\r\n\t\t\t\t\treturn this.getUTCFullYear()\r\n\t\t\t\t\t\t+ '-' + pad(this.getUTCMonth() + 1)\r\n\t\t\t\t\t\t+ '-' + pad(this.getUTCDate())\r\n\t\t\t\t\t\t+ 'T' + pad(this.getUTCHours())\r\n\t\t\t\t\t\t+ ':' + pad(this.getUTCMinutes())\r\n\t\t\t\t\t\t+ ':' + pad(this.getUTCSeconds())\r\n\t\t\t\t\t\t+ '.' + String((this.getUTCMilliseconds() / MS_IN_S).toFixed(3)).slice(2, 5)\r\n\t\t\t\t\t\t+ 'Z';\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitConfigDefaults();\r\n\t\tinitRequiredPolyfills();\r\n\r\n\t\tvar DOMNodeTypes = {\r\n\t\t\t\"ELEMENT_NODE\": 1,\r\n\t\t\t\"TEXT_NODE\": 3,\r\n\t\t\t\"CDATA_SECTION_NODE\": 4,\r\n\t\t\t\"COMMENT_NODE\": 8,\r\n\t\t\t\"DOCUMENT_NODE\": 9\r\n\t\t};\r\n\r\n\t\tfunction getDomNodeLocalName(domNode) {\r\n\t\t\tvar localName = domNode.localName;\r\n\t\t\tif (localName == null) {\r\n\t\t\t\t// Yeah, this is IE!!\r\n\t\t\t\tlocalName = domNode.baseName;\r\n\t\t\t}\r\n\t\t\tif (localName == null || localName === \"\") {\r\n\t\t\t\t// ===\"\" is IE too\r\n\t\t\t\tlocalName = domNode.nodeName;\r\n\t\t\t}\r\n\t\t\treturn localName;\r\n\t\t}\r\n\r\n\t\tfunction getDomNodeNamespacePrefix(node) {\r\n\t\t\treturn node.prefix;\r\n\t\t}\r\n\r\n\t\tfunction escapeXmlChars(str) {\r\n\t\t\tif (typeof str === \"string\")\r\n\t\t\t\treturn str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;');\r\n\t\t\telse\r\n\t\t\t\treturn str;\r\n\t\t}\r\n\r\n\t\tfunction unescapeXmlChars(str) {\r\n\t\t\treturn str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&amp;/g, '&');\r\n\t\t}\r\n\r\n\t\tfunction ensureProperArrayAccessForm(element, childName, elementPath) {\r\n\t\t\tswitch (config.arrayAccessForm) {\r\n\t\t\t\tcase \"property\":\r\n\t\t\t\t\tif (!(element[childName] instanceof Array))\r\n\t\t\t\t\t\telement[childName + \"_asArray\"] = [element[childName]];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement[childName + \"_asArray\"] = element[childName];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (!(element[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\r\n\t\t\t\tvar match = false;\r\n\r\n\t\t\t\tfor (var i = 0; i < config.arrayAccessFormPaths.length; i++) {\r\n\t\t\t\t\tvar arrayPath = config.arrayAccessFormPaths[i];\r\n\t\t\t\t\tif (typeof arrayPath === \"string\") {\r\n\t\t\t\t\t\tif (arrayPath === elementPath) {\r\n\t\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (arrayPath instanceof RegExp) {\r\n\t\t\t\t\t\tif (arrayPath.test(elementPath)) {\r\n\t\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (typeof arrayPath === \"function\") {\r\n\t\t\t\t\t\tif (arrayPath(childName, elementPath)) {\r\n\t\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (match)\r\n\t\t\t\t\telement[childName] = [element[childName]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction xmlDateTimeToDate(prop) {\r\n\t\t\t// Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\r\n\t\t\t// Improved to support full spec and optional parts\r\n\t\t\tvar MINUTES_PER_HOUR = 60;\r\n\r\n\t\t\tvar bits = prop.split(/[-T:+Z]/g);\r\n\r\n\t\t\tvar d = new Date(bits[0], bits[1] - 1, bits[2]);\r\n\t\t\tvar secondBits = bits[5].split(\"\\.\");\r\n\t\t\td.setHours(bits[3], bits[4], secondBits[0]);\r\n\t\t\tif (secondBits.length > 1)\r\n\t\t\t\td.setMilliseconds(secondBits[1]);\r\n\r\n\t\t\t// Get supplied time zone offset in minutes\r\n\t\t\tif (bits[6] && bits[7]) {\r\n\t\t\t\tvar offsetMinutes = bits[6] * MINUTES_PER_HOUR + Number(bits[7]);\r\n\t\t\t\tvar sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop) ? '-' : '+';\r\n\r\n\t\t\t\t// Apply the sign\r\n\t\t\t\toffsetMinutes = 0 + (sign === '-' ? -1 * offsetMinutes : offsetMinutes);\r\n\r\n\t\t\t\t// Apply offset and local timezone\r\n\t\t\t\td.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset());\r\n\t\t\t} else if (prop.indexOf(\"Z\", prop.length - 1) !== -1) {\r\n\t\t\t\td = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\r\n\t\t\t}\r\n\r\n\t\t\t// d is now a local time equivalent to the supplied time\r\n\t\t\treturn d;\r\n\t\t}\r\n\r\n\t\tfunction convertToDateIfRequired(value, childName, fullPath) {\r\n\t\t\tif (config.datetimeAccessFormPaths.length > 0) {\r\n\t\t\t\tvar pathWithoutTextNode = fullPath.split(\"\\.#\")[0];\r\n\r\n\t\t\t\tfor (var i = 0; i < config.datetimeAccessFormPaths.length; i++) {\r\n\t\t\t\t\tvar candidatePath = config.datetimeAccessFormPaths[i];\r\n\t\t\t\t\tif (typeof candidatePath === \"string\") {\r\n\t\t\t\t\t\tif (candidatePath === pathWithoutTextNode)\r\n\t\t\t\t\t\t\treturn xmlDateTimeToDate(value);\r\n\t\t\t\t\t} else if (candidatePath instanceof RegExp) {\r\n\t\t\t\t\t\tif (candidatePath.test(pathWithoutTextNode))\r\n\t\t\t\t\t\t\treturn xmlDateTimeToDate(value);\r\n\t\t\t\t\t} else if (typeof candidatePath === \"function\") {\r\n\t\t\t\t\t\tif (candidatePath(pathWithoutTextNode))\r\n\t\t\t\t\t\t\treturn xmlDateTimeToDate(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tfunction deserializeRootElementChildren(rootElement) {\r\n\t\t\tvar result = {};\r\n\t\t\tvar children = rootElement.childNodes;\r\n\r\n\t\t\t// Alternative for firstElementChild which is not supported in some environments\r\n\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\tvar child = children.item(i);\r\n\t\t\t\tif (child.nodeType === DOMNodeTypes.ELEMENT_NODE) {\r\n\t\t\t\t\tvar childName = getDomNodeLocalName(child);\r\n\r\n\t\t\t\t\tif (config.ignoreRoot)\r\n\t\t\t\t\t\tresult = deserializeDomChildren(child, childName);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tresult[childName] = deserializeDomChildren(child, childName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction deserializeElementChildren(element, elementPath) {\r\n\t\t\tvar result = {};\r\n\t\t\tresult.__cnt = 0;\r\n\r\n\t\t\tvar nodeChildren = element.childNodes;\r\n\r\n\t\t\t// Child nodes.\r\n\t\t\tfor (var iChild = 0; iChild < nodeChildren.length; iChild++) {\r\n\t\t\t\tvar child = nodeChildren.item(iChild);\r\n\t\t\t\tvar childName = getDomNodeLocalName(child);\r\n\r\n\t\t\t\tif (child.nodeType === DOMNodeTypes.COMMENT_NODE)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tresult.__cnt++;\r\n\r\n\t\t\t\t// We deliberately do not accept everything falsey here because\r\n\t\t\t\t// elements that resolve to empty string should still be preserved.\r\n\t\t\t\tif (result[childName] == null) {\r\n\t\t\t\t\tresult[childName] = deserializeDomChildren(child, elementPath + \".\" + childName);\r\n\t\t\t\t\tensureProperArrayAccessForm(result, childName, elementPath + \".\" + childName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!(result[childName] instanceof Array)) {\r\n\t\t\t\t\t\tresult[childName] = [result[childName]];\r\n\t\t\t\t\t\tensureProperArrayAccessForm(result, childName, elementPath + \".\" + childName);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult[childName][result[childName].length] = deserializeDomChildren(child, elementPath + \".\" + childName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Attributes\r\n\t\t\tfor (var iAttribute = 0; iAttribute < element.attributes.length; iAttribute++) {\r\n\t\t\t\tvar attribute = element.attributes.item(iAttribute);\r\n\t\t\t\tresult.__cnt++;\r\n\r\n\t\t\t\tvar adjustedValue = attribute.value;\r\n\t\t\t\tfor (var iConverter = 0; iConverter < config.attributeConverters.length; iConverter++) {\r\n\t\t\t\t\tvar converter = config.attributeConverters[iConverter];\r\n\t\t\t\t\tif (converter.test.call(null, attribute.name, attribute.value))\r\n\t\t\t\t\t\tadjustedValue = converter.convert.call(null, attribute.name, attribute.value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult[config.attributePrefix + attribute.name] = adjustedValue;\r\n\t\t\t}\r\n\r\n\t\t\t// Node namespace prefix\r\n\t\t\tvar namespacePrefix = getDomNodeNamespacePrefix(element);\r\n\t\t\tif (namespacePrefix) {\r\n\t\t\t\tresult.__cnt++;\r\n\t\t\t\tresult.__prefix = namespacePrefix;\r\n\t\t\t}\r\n\r\n\t\t\tif (result[\"#text\"]) {\r\n\t\t\t\tresult.__text = result[\"#text\"];\r\n\r\n\t\t\t\tif (result.__text instanceof Array) {\r\n\t\t\t\t\tresult.__text = result.__text.join(\"\\n\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (config.escapeMode)\r\n\t\t\t\t\tresult.__text = unescapeXmlChars(result.__text);\r\n\r\n\t\t\t\tif (config.stripWhitespaces)\r\n\t\t\t\t\tresult.__text = result.__text.trim();\r\n\r\n\t\t\t\tdelete result[\"#text\"];\r\n\r\n\t\t\t\tif (config.arrayAccessForm === \"property\")\r\n\t\t\t\t\tdelete result[\"#text_asArray\"];\r\n\r\n\t\t\t\tresult.__text = convertToDateIfRequired(result.__text, \"#text\", elementPath + \".#text\");\r\n\t\t\t}\r\n\r\n\t\t\tif (result.hasOwnProperty('#cdata-section')) {\r\n\t\t\t\tresult.__cdata = result[\"#cdata-section\"];\r\n\t\t\t\tdelete result[\"#cdata-section\"];\r\n\r\n\t\t\t\tif (config.arrayAccessForm === \"property\")\r\n\t\t\t\t\tdelete result[\"#cdata-section_asArray\"];\r\n\t\t\t}\r\n\r\n\t\t\tif (result.__cnt === 1 && result.__text && !config.keepText) {\r\n\t\t\t\tresult = result.__text;\r\n\t\t\t} else if (result.__cnt === 0 && config.emptyNodeForm === \"text\") {\r\n\t\t\t\tresult = '';\r\n\t\t\t} else if (result.__cnt > 1 && result.__text !== undefined && config.skipEmptyTextNodesForObj) {\r\n\t\t\t\tif (config.stripWhitespaces && result.__text === \"\" || result.__text.trim() === \"\") {\r\n\t\t\t\t\tdelete result.__text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete result.__cnt;\r\n\r\n\t\t\t/**\r\n\t\t\t * We are checking if we are creating a __cdata property or if we just add the content of cdata inside result.\r\n\t\t\t * But, if we have a property inside xml tag (<tag PROPERTY=\"1\"></tag>), and a cdata inside, we can't ignore it.\r\n\t\t\t * In this case we are keeping __cdata property.\r\n\t\t\t */\r\n\t\t\tif (!config.keepCData && (!result.hasOwnProperty('__text') && result.hasOwnProperty('__cdata') && Object.keys(result).length === 1)) {\r\n\t\t\t\treturn (result.__cdata ? result.__cdata : '');\r\n\t\t\t}\r\n\r\n\t\t\tif (config.enableToStringFunc && (result.__text || result.__cdata)) {\r\n\t\t\t\tresult.toString = function toString() {\r\n\t\t\t\t\treturn (this.__text ? this.__text : '') + (this.__cdata ? this.__cdata : '');\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction deserializeDomChildren(node, parentPath) {\r\n\t\t\tif (node.nodeType === DOMNodeTypes.DOCUMENT_NODE) {\r\n\t\t\t\treturn deserializeRootElementChildren(node);\r\n\t\t\t} else if (node.nodeType === DOMNodeTypes.ELEMENT_NODE) {\r\n\t\t\t\treturn deserializeElementChildren(node, parentPath);\r\n\t\t\t} else if (node.nodeType === DOMNodeTypes.TEXT_NODE || node.nodeType === DOMNodeTypes.CDATA_SECTION_NODE) {\r\n\t\t\t\treturn node.nodeValue;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction serializeStartTag(jsObject, elementName, attributeNames, selfClosing) {\r\n\t\t\tvar resultStr = \"<\" + ((jsObject && jsObject.__prefix) ? (jsObject.__prefix + \":\") : \"\") + elementName;\r\n\r\n\t\t\tif (attributeNames) {\r\n\t\t\t\tfor (var i = 0; i < attributeNames.length; i++) {\r\n\t\t\t\t\tvar attributeName = attributeNames[i];\r\n\t\t\t\t\tvar attributeValue = jsObject[attributeName];\r\n\r\n\t\t\t\t\tif (config.escapeMode)\r\n\t\t\t\t\t\tattributeValue = escapeXmlChars(attributeValue);\r\n\r\n\t\t\t\t\tresultStr += \" \" + attributeName.substr(config.attributePrefix.length) + \"=\";\r\n\r\n\t\t\t\t\tif (config.useDoubleQuotes)\r\n\t\t\t\t\t\tresultStr += '\"' + attributeValue + '\"';\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tresultStr += \"'\" + attributeValue + \"'\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!selfClosing)\r\n\t\t\t\tresultStr += \">\";\r\n\t\t\telse\r\n\t\t\t\tresultStr += \" />\";\r\n\r\n\t\t\treturn resultStr;\r\n\t\t}\r\n\r\n\t\tfunction serializeEndTag(jsObject, elementName) {\r\n\t\t\treturn \"</\" + ((jsObject && jsObject.__prefix) ? (jsObject.__prefix + \":\") : \"\") + elementName + \">\";\r\n\t\t}\r\n\r\n\t\tfunction endsWith(str, suffix) {\r\n\t\t\treturn str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n\t\t}\r\n\r\n\t\tfunction isSpecialProperty(jsonObj, propertyName) {\r\n\t\t\tif ((config.arrayAccessForm === \"property\" && endsWith(propertyName.toString(), (\"_asArray\")))\r\n\t\t\t\t|| propertyName.toString().indexOf(config.attributePrefix) === 0\r\n\t\t\t\t|| propertyName.toString().indexOf(\"__\") === 0\r\n\t\t\t\t|| (jsonObj[propertyName] instanceof Function))\r\n\t\t\t\treturn true;\r\n\t\t\telse\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction getDataElementCount(jsObject) {\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\tif (jsObject instanceof Object) {\r\n\t\t\t\tfor (var propertyName in jsObject) {\r\n\t\t\t\t\tif (isSpecialProperty(jsObject, propertyName))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn count;\r\n\t\t}\r\n\r\n\t\tfunction getDataAttributeNames(jsObject) {\r\n\t\t\tvar names = [];\r\n\r\n\t\t\tif (jsObject instanceof Object) {\r\n\t\t\t\tfor (var attributeName in jsObject) {\r\n\t\t\t\t\tif (attributeName.toString().indexOf(\"__\") === -1\r\n\t\t\t\t\t\t&& attributeName.toString().indexOf(config.attributePrefix) === 0) {\r\n\t\t\t\t\t\tnames.push(attributeName);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn names;\r\n\t\t}\r\n\r\n\t\tfunction serializeComplexTextNodeContents(textNode) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\tif (textNode.__cdata) {\r\n\t\t\t\tresult += \"<![CDATA[\" + textNode.__cdata + \"]]>\";\r\n\t\t\t}\r\n\r\n\t\t\tif (textNode.__text || typeof (textNode.__text) === 'number' || typeof (textNode.__text) === 'boolean') {\r\n\t\t\t\tif (config.escapeMode)\r\n\t\t\t\t\tresult += escapeXmlChars(textNode.__text);\r\n\t\t\t\telse\r\n\t\t\t\t\tresult += textNode.__text;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction serializeTextNodeContents(textNode) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\tif (textNode instanceof Object) {\r\n\t\t\t\tresult += serializeComplexTextNodeContents(textNode);\r\n\t\t\t} else if (textNode !== null) {\r\n\t\t\t\tif (config.escapeMode)\r\n\t\t\t\t\tresult += escapeXmlChars(textNode);\r\n\t\t\t\telse\r\n\t\t\t\t\tresult += textNode;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction serializeArray(elementArray, elementName, attributes) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\tif (elementArray.length === 0) {\r\n\t\t\t\tresult += serializeStartTag(elementArray, elementName, attributes, true);\r\n\t\t\t} else {\r\n\t\t\t\tfor (var i = 0; i < elementArray.length; i++) {\r\n\t\t\t\t\tresult += serializeJavaScriptObject(elementArray[i], elementName, getDataAttributeNames(elementArray[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction serializeJavaScriptObject(element, elementName, attributes) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\t// Filter out elements\r\n\t\t\tif (config.jsAttributeFilter && config.jsAttributeFilter.call(null, elementName, element)) {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\t// Convert element\r\n\t\t\tif (config.jsAttributeConverter) {\r\n\t\t\t\telement = config.jsAttributeConverter.call(null, elementName, element);\r\n\t\t\t}\r\n\t\t\tif ((element === undefined || element === null || element === '') && config.selfClosingElements) {\r\n\t\t\t\tresult += serializeStartTag(element, elementName, attributes, true);\r\n\t\t\t} else if (typeof element === 'object') {\r\n\t\t\t\tif (Object.prototype.toString.call(element) === '[object Array]') {\r\n\t\t\t\t\tresult += serializeArray(element, elementName, attributes);\r\n\t\t\t\t} else if (element instanceof Date) {\r\n\t\t\t\t\tresult += serializeStartTag(element, elementName, attributes, false);\r\n\t\t\t\t\t// Serialize date\r\n\t\t\t\t\tresult += config.jsDateUTC ? element.toUTCString() : element.toISOString();\r\n\t\t\t\t\tresult += serializeEndTag(element, elementName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar childElementCount = getDataElementCount(element);\r\n\t\t\t\t\tif (childElementCount > 0 || typeof (element.__text) === 'number' || typeof (element.__text) === 'boolean' || element.__text || element.__cdata) {\r\n\t\t\t\t\t\tresult += serializeStartTag(element, elementName, attributes, false);\r\n\t\t\t\t\t\tresult += serializeJavaScriptObjectChildren(element);\r\n\t\t\t\t\t\tresult += serializeEndTag(element, elementName);\r\n\t\t\t\t\t} else if (config.selfClosingElements) {\r\n\t\t\t\t\t\tresult += serializeStartTag(element, elementName, attributes, true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult += serializeStartTag(element, elementName, attributes, false);\r\n\t\t\t\t\t\tresult += serializeEndTag(element, elementName);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult += serializeStartTag(element, elementName, attributes, false);\r\n\t\t\t\tresult += serializeTextNodeContents(element);\r\n\t\t\t\tresult += serializeEndTag(element, elementName);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction serializeJavaScriptObjectChildren(jsObject) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\tvar elementCount = getDataElementCount(jsObject);\r\n\r\n\t\t\tif (elementCount > 0) {\r\n\t\t\t\tfor (var elementName in jsObject) {\r\n\t\t\t\t\tif (isSpecialProperty(jsObject, elementName))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar element = jsObject[elementName];\r\n\t\t\t\t\tvar attributes = getDataAttributeNames(element);\r\n\r\n\t\t\t\t\tresult += serializeJavaScriptObject(element, elementName, attributes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tresult += serializeTextNodeContents(jsObject);\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction parseXml(xml) {\r\n\t\t\tif (xml === undefined) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof xml !== \"string\") {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar parser = null;\r\n\t\t\tvar domNode = null;\r\n\r\n\t\t\tif (CustomDOMParser) {\r\n\t\t\t\t// This branch is used for node.js, with the xmldom parser.\r\n\t\t\t\tparser = new CustomDOMParser(config.xmldomOptions);\r\n\r\n\t\t\t\tdomNode = parser.parseFromString(xml, \"text/xml\");\r\n\t\t\t} else if (window && window.DOMParser) {\r\n\t\t\t\tparser = new window.DOMParser();\r\n\t\t\t\tvar parsererrorNS = null;\r\n\r\n\t\t\t\tvar isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\r\n\r\n\t\t\t\t// IE9+ now is here\r\n\t\t\t\tif (!isIEParser && document.all && !document.addEventListener) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tparsererrorNS = parser.parseFromString(\"INVALID\", \"text/xml\").childNodes[0].namespaceURI;\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tparsererrorNS = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdomNode = parser.parseFromString(xml, \"text/xml\");\r\n\t\t\t\t\tif (parsererrorNS !== null && domNode.getElementsByTagNameNS(parsererrorNS, \"parsererror\").length > 0) {\r\n\t\t\t\t\t\tdomNode = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tdomNode = null;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// IE :(\r\n\t\t\t\tif (xml.indexOf(\"<?\") === 0) {\r\n\t\t\t\t\txml = xml.substr(xml.indexOf(\"?>\") + 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* global ActiveXObject */\r\n\t\t\t\tdomNode = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n\t\t\t\tdomNode.async = \"false\";\r\n\t\t\t\tdomNode.loadXML(xml);\r\n\t\t\t}\r\n\r\n\t\t\treturn domNode;\r\n\t\t}\r\n\r\n\t\tthis.asArray = function asArray(prop) {\r\n\t\t\tif (prop === undefined || prop === null) {\r\n\t\t\t\treturn [];\r\n\t\t\t} else if (prop instanceof Array) {\r\n\t\t\t\treturn prop;\r\n\t\t\t} else {\r\n\t\t\t\treturn [prop];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.toXmlDateTime = function toXmlDateTime(dt) {\r\n\t\t\tif (dt instanceof Date) {\r\n\t\t\t\treturn dt.toISOString();\r\n\t\t\t} else if (typeof (dt) === 'number') {\r\n\t\t\t\treturn new Date(dt).toISOString();\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.asDateTime = function asDateTime(prop) {\r\n\t\t\tif (typeof (prop) === \"string\") {\r\n\t\t\t\treturn xmlDateTimeToDate(prop);\r\n\t\t\t} else {\r\n\t\t\t\treturn prop;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t\tInternally the logic works in a cycle:\r\n\t\t\tDOM->JS - implemented by custom logic (deserialization).\r\n\t\t\tJS->XML - implemented by custom logic (serialization).\r\n\t\t\tXML->DOM - implemented by browser.\r\n\t\t*/\r\n\r\n\t\t// Transformns an XML string into DOM-tree\r\n\t\tthis.xml2dom = function xml2dom(xml) {\r\n\t\t\treturn parseXml(xml);\r\n\t\t};\r\n\r\n\t\t// Transforms a DOM tree to JavaScript objects.\r\n\t\tthis.dom2js = function dom2js(domNode) {\r\n\t\t\treturn deserializeDomChildren(domNode, null);\r\n\t\t};\r\n\r\n\t\t// Transforms JavaScript objects to a DOM tree.\r\n\t\tthis.js2dom = function js2dom(jsObject) {\r\n\t\t\tvar xml = this.js2xml(jsObject);\r\n\t\t\treturn parseXml(xml);\r\n\t\t};\r\n\r\n\t\t// Transformns an XML string into JavaScript objects.\r\n\t\tthis.xml2js = function xml2js(xml) {\r\n\t\t\tvar domNode = parseXml(xml);\r\n\t\t\tif (domNode != null)\r\n\t\t\t\treturn this.dom2js(domNode);\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\t// Transforms JavaScript objects into an XML string.\r\n\t\tthis.js2xml = function js2xml(jsObject) {\r\n\t\t\treturn serializeJavaScriptObjectChildren(jsObject);\r\n\t\t};\r\n\r\n\t\tthis.getVersion = function getVersion() {\r\n\t\t\treturn VERSION;\r\n\t\t};\r\n\t};\r\n});\r\n","import './ocls-clear-display';\r\n\r\nvar app = angular.module('viewCustom', ['angularLoad', 'oclsClearDisplay']);","// Display OUR/CLEAR permitted uses directly in Primo\n// Requires an URL to the OUR/CLEAR resource inside the\nimport X2JS from 'x2js';\n\nangular\n    .module('oclsClearDisplay', [])\n    .factory('oclsClearService', ['$http', '$sce',function($http, $sce){\n        function fetchOurData(baseUrl,resourceName){\n            let url = baseUrl + 'api/?tag=' + resourceName;\n            \n            var x2js = new X2JS();\n            \n            $sce.trustAsResourceUrl(url);\n\n            return $http.get(url)\n                .then(\n                    function(response){\n                        return x2js.xml2js(response.data);\n                    },\n                    function(httpError){\n                        if (httpError.status === 404)return null;\n                        let error = \"an error occured: oclsClearService callback: \" + httpError.status;\n                        if (httpError.data && httpError.data.errorMessage) {\n                            error += ' - ' + httpError.data.errorMessage;\n                        }\n                        console.error(error);\n                        return null;\n                    }\n                );\n            }\n            return {\n                fetchOurData : fetchOurData\n            };\n        }])\n    .controller('oclsClearDisplayController', ['$scope', 'oclsClearService', function ($scope, oclsClearService) {\n        var vm = this;\n        this.$onInit = function() {\n            $scope.$watch(\n                function () {\n                    if (angular.isDefined(vm.parentCtrl.services)) {\n                        // As soon as there are location details, watch for changes in the list of location items\n                        return vm.parentCtrl.services;\n                    }\n                    return 0;\n                },\n                function () {\n                    // This listener function is called both during initial run and whenever the watched variable changes.\n                    if (angular.isDefined(vm.parentCtrl.services)){\n                        console.log('OCLS CLEAR display start');\n                        \n                        var services = vm.parentCtrl.services;\n                        \n                        // Go through the list of available services and look for OUR/CLEAR URLs\n                        for(var i = 0; i < services.length; i++){\n                            console.log(services[i]);\n                            var clearLink = services[i].publicNote.match(/href=\"(.+\\.scholarsportal\\.info\\/licenses\\/)([^\"]+)\\\"/);\n                            console.log('Found CLEAR link');\n                            console.log(clearLink);\n                            if (clearLink){\n                                var clearBaseUrl = clearLink[1];\n                                console.log(clearBaseUrl);\n                                var clearResourceName = clearLink[2];\n                                console.log(clearResourceName);\n                                oclsClearService.fetchOurData(clearBaseUrl,clearResourceName)\n                                .then((data) => {\n                                    try{\n                                        if (!data)return;\n                                        // The data variable contains the license information as a JSON object.\n                                        console.log(data);\n                                    }\n                                    catch(e){\n                                        console.error(\"an error occured: oclsClearDisplayController:\\n\\n\");\n                                        console.error(e.message);\n                                    }\n                                })\n                                \n                            }\n                            \n                            \n                        }\n                         \n                    }\n                }\n            );\n        }\n    }])\n\n    .component('prmAlmaViewitItemsAfter', {\n        bindings: { parentCtrl: '<' },\n        controller: 'oclsClearDisplayController'\n    });"]}